{"version":3,"sources":["px-app-switcher.es6.js"],"names":["Polymer","is","ready","distributed","firstElementChild","rect","getBoundingClientRect","console","log","top","right","bottom","left","properties","items","type","Array","notify","value","iconsList","computed","_computedItems","computedItemsArr","len","length","i","checkboxMode","push","val","checked","forEach","item","index"],"mappings":"aAAA,CAAC,UAAW,CACVA,QAAQ,CAENC,GAAI,iBAFE,CAGNC,MAAO,gBAAW,CAChB,GAAIC,aAAc,KAAKC,iBAAvB,CACA,GAAIC,MAAOF,YAAYG,qBAAZ,EAAX,CACAC,QAAQC,GAAR,CAAYH,KAAKI,GAAjB,CAAsBJ,KAAKK,KAA3B,CAAkCL,KAAKM,MAAvC,CAA+CN,KAAKO,IAApD,CACD,CAPK,CAQNC,WAAY,CAMVC,MAAO,CACLC,KAAMC,KADD,CAELC,OAAQ,IAFH,CAGLC,MAAO,gBAAY,CACjB,MAAO,EACR,CALI,CANG,CAkBVC,UAAW,CACTJ,KAAMC,KADG,CAETE,MAAO,gBAAY,CACjB,MAAO,EACR,CAJQ,CAKTE,SAAU,gCALD,CAlBD,CARN,CAuCNC,eAAgB,wBAAUP,KAAV,CAAiB,CAC/B,GAAI,KAAKA,KAAT,CAAgB,CACd,GAAIQ,kBAAmB,EAAvB,CACA,GAAI,MAAO,MAAKR,KAAL,CAAW,CAAX,CAAP,GAAyB,QAA7B,CAAuC,CACrC,GAAIS,KAAMT,MAAMU,MAAhB,CACEC,EAAI,CADN,CAEA,IAAKA,CAAL,CAAQA,EAAIF,GAAZ,CAAiBE,GAAjB,CAAsB,CACpB,GAAI,KAAKC,YAAT,CAAuB,CAErBJ,iBAAiBK,IAAjB,CAAsB,CAACC,IAAKd,MAAMW,CAAN,CAAN,CAAgBI,QAAS,KAAzB,CAAtB,CACD,CAHD,IAIK,CACHP,iBAAiBK,IAAjB,CAAsB,CAACC,IAAKd,MAAMW,CAAN,CAAN,CAAtB,CACD,CACF,CACD,MAAOH,iBACR,CAbD,IAcK,CAGHR,MAAMgB,OAAN,CAAc,SAAUC,IAAV,CAAgBC,KAAhB,CAAuB,CACnCV,iBAAiBK,IAAjB,CAAsBI,IAAtB,CACD,CAFD,EAGA,MAAOT,iBACR,CACF,CACF,CAjEK,CAAR,CAmED,CApED","file":"px-app-switcher.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-app-switcher',\n    ready: function() {\n      var distributed = this.firstElementChild;\n      var rect = distributed.getBoundingClientRect();\n      console.log(rect.top, rect.right, rect.bottom, rect.left);\n    },\n    properties: {\n      /**\n      * This property keeps track of the number of clicks.\n      *\n      * @property counterValue\n      */\n      items: {\n        type: Array,\n        notify: true,\n        value: function () {\n          return [];\n        }\n      },\n      /**\n       * This property keeps track of the number of√ü clicks.\n       *\n       * @property counterValue\n       */\n      iconsList: {\n        type: Array,\n        value: function () {\n          return [];\n        },\n        computed: '_computedItems(items, items.*)'\n      }\n    },\n    /**\n    * Handles click on the element defined in 'on-click' on the template.\n    *\n    * @method handleClick\n    */\n    _computedItems: function (items) {\n      if (this.items) {\n        var computedItemsArr = [];\n        if (typeof this.items[0] === 'string') {\n          var len = items.length,\n            i = 0;\n          for (i; i < len; i++) {\n            if (this.checkboxMode) {\n              //default unchecked if using a string array in check mode\n              computedItemsArr.push({val: items[i], checked: false});\n            }\n            else {\n              computedItemsArr.push({val: items[i]});\n            }\n          }\n          return computedItemsArr;\n        }\n        else {\n          //with new array it looks like we need to do a copy of items\n          // seems like items can be sparse at this point\n          items.forEach(function (item, index) {\n            computedItemsArr.push(item);\n          });\n          return computedItemsArr;\n        }\n      }\n    },\n  });\n})();\n"]}