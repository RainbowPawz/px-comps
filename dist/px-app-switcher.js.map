{"version":3,"sources":["px-app-switcher.es6.js"],"names":["Polymer","is","behaviors","IronResizableBehavior","attached","Gestures","add","document","_setColValue","items","_setIronIcon","_created","detached","unlisten","firstElementChild","childNodes","properties","type","Array","notify","value","iconsList","computed","open","Boolean","isGrid","String","displayString","colValue","ironIconImage","listeners","listen","_computedItems","computedItemsArr","forEach","item","index","push","array","isgrid","toLowerCase","length","ironiconimage","_clickButtonEvent","event","target","classList","contains","_openOrHideElement","_setPosition","displayBoolean","bodyRect","getBoundingClientRect","button","right","window","innerWidth","width","customStyle","left","updateStyles","_onIronResize"],"mappings":"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","file":"px-app-switcher.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-app-switcher',\n    behaviors: [\n      Polymer.IronResizableBehavior\n    ],\n    /**\n     * attaches listeners when popover is created\n     *\n     * @method attached\n     */\n    attached: function() {\n      // Enable document-wide tap recognizer.\n      Polymer.Gestures.add(document, 'tap', null);\n      this._setColValue(this.items);\n      this._setIronIcon();\n      this._created();\n    },\n    /**\n     * removes listeners when popover is destroyed\n     *\n     * @method detached\n     */\n    detached: function () {\n      this.unlisten(this.firstElementChild.childNodes[1], 'tap', '_clickButtonEvent');\n      this.unlisten(document, 'click', '_clickButtonEvent');\n    },\n    /**\n     * Properties block, expose attribute values to the DOM via 'reflect'\n     *\n     * @property properties\n     * @type Object\n     */\n    properties: {\n      /**\n       * This property keeps track of the number items in the main list.\n       */\n      items: {\n        type: Array,\n        notify: true,\n        value: function () {\n          return [];\n        }\n      },\n      /**\n       * This property keeps track of the icons list.\n       */\n      iconsList: {\n        type: Array,\n        value: function () {\n          return [];\n        },\n        computed: '_computedItems(items, items.*)'\n      },\n      /**\n       * This property keeps track of the boolean for open and closing of the popover.\n       *\n       */\n      open: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * This property keeps track of the boolean displaying as grid.\n       * - 'yes': will display in grid format\n       * - 'no' : will display in list format\n       */\n      isGrid: {\n        type: String,\n        value: ''\n      },\n      /**\n       * This property keeps track the display string for open or closing css.\n       *\n       */\n      displayString :{\n        type: String,\n        notify: true,\n        value: ''\n      },\n      /**\n       * This property keeps track the display col spacing.\n       *\n       */\n      colValue:{\n        type: String,\n        value: ''\n      },\n\n      ironIconImage: {\n        type: String,\n        value: ''\n      }\n    },\n    /**\n     * Adds a listener for resizing the window.\n     *\n     * @method handleClick\n     */\n    listeners: {\n      'iron-resize': '_onIronResize'\n    },\n\n    /**\n     * Adds listener events to document and element.\n     *\n     * @method created\n     */\n    _created: function () {\n      this.listen(this.firstElementChild.childNodes[1], 'tap', '_clickButtonEvent');\n      this.listen(document, 'click', '_clickButtonEvent');\n    },\n\n    /**\n     * Parses an array of strings into an iterative array for the html template.\n     *\n     * @method computedItems\n     */\n    _computedItems: function (items) {\n      if (this.items) {\n        var computedItemsArr = [];\n          items.forEach(function (item, index) {\n            computedItemsArr.push(item);\n          });\n          return computedItemsArr;\n      }\n    },\n    /**\n     * Parses an array of strings into an iterative array for the html template.\n     *\n     * @method computedItems\n     */\n    _setColValue: function (array) {\n      if(this.isgrid.toLowerCase() === 'yes') {\n        if(array.length % 3 === 0) {\n          this.colValue = 'col-sm-4';\n        } else if (array.length % 2 === 0) {\n          this.colValue = 'col-sm-3';\n        }\n      } else {\n        this.colValue = 'col-sm-12';\n      }\n    },\n\n    _setIronIcon: function () {\n      this.ironIconImage = (this.ironiconimage ? this.ironiconimage : 'fa:fa-th')\n    },\n\n    /**\n     * Handles click on the element to either hide or show popover.\n     *\n     * @method handleButtonEvent\n     */\n    _clickButtonEvent: function (event) {\n      if(event.type === 'click' && !event.target.classList.contains(\"menu-button\")) {\n        this._openOrHideElement(false, '');\n      } else if(event.type === 'tap' && event.target.classList.contains(\"menu-button\")) {\n        if (this.open){\n          this._openOrHideElement(false, '');\n        } else {\n          this._setPosition();\n          this._openOrHideElement(true, 'open');\n        }\n      }\n    },\n\n    /**\n     * Handles how to show ors hide the element on off click/ or secondary button click.\n     *\n     * @method hide\n     */\n    _openOrHideElement: function(displayBoolean, displayString) {\n      this.open = displayBoolean\n      this.displayString = displayString + (this.isgrid === 'yes' ? ' isGrid' : ' isList');\n    },\n\n    /**\n     * Handleshow to display popover element on show.\n     *\n     * @method setPosition\n     */\n    _setPosition: function() {\n      var bodyRect = this.firstElementChild.getBoundingClientRect();\n      var button = this.firstElementChild.childNodes[1].getBoundingClientRect();\n\n      if(button.right >  + window.innerWidth / 2) {\n        var right = ((bodyRect.right - button.right) + (button.width)) + 15;\n        this.customStyle['--shared-position-right'] = right + 'px !important;';\n        this.customStyle['--shared-position-left'] = '';\n        this.customStyle['--shared-margin'] = '50px';\n        this.customStyle['--carat-right'] = '10px !important;';\n        this.customStyle['--carat-left'] = '';\n      } else {\n        this.customStyle['--shared-position-left'] = button.left + 'px !important;';\n        this.customStyle['--shared-position-right'] = '';\n        this.customStyle['--shared-margin'] = '20px';\n        this.customStyle['--carat-right'] = '';\n        this.customStyle['--carat-left'] = '10px !important;';\n      }\n      this.updateStyles();\n    } ,\n\n    /**\n     * Handles how to position popover on screen resize\n     *\n     * @method onIronResize\n     */\n    _onIronResize: function () {\n      if(this.open) {\n        this._setPosition();\n      }\n    }\n  });\n})();\n"]}